version: "3.8"

services:
  # ========================
  # BIENES Y CONCESIONES 
  # ========================
  dgbienes-bienes:
    build: .
    container_name: dgbienes_bienes_concesiones
    env_file:
      - .env.default
    environment:
      - APP_ENV=default
    volumes:
      - ./output/bienes:/app/output
      - ./logs:/app/logs
    command: python main.py --mode both --sync-mode incremental
    networks:
      - dgbienes-network

  # Carga inicial completa para Bienes
  dgbienes-bienes-full:
    build: .
    container_name: dgbienes_bienes_full
    env_file:
      - .env.default
    environment:
      - APP_ENV=default
    volumes:
      - ./output/bienes:/app/output
      - ./logs:/app/logs
    command: python main.py --mode sqlserver --sync-mode full
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # ========================
  # SIGAF 
  # ========================
  dgbienes-sigaf:
    build: .
    container_name: dgbienes_sigaf
    env_file:
      - .env.sigaf
    environment:
      - APP_ENV=sigaf
    volumes:
      - ./output/sigaf:/app/output
      - ./logs:/app/logs
    command: python main.py --mode both --sync-mode incremental
    networks:
      - dgbienes-network

  # Carga inicial completa para SIGAF
  dgbienes-sigaf-full:
    build: .
    container_name: dgbienes_sigaf_full
    env_file:
      - .env.sigaf
    environment:
      - APP_ENV=sigaf
    volumes:
      - ./output/sigaf:/app/output
      - ./logs:/app/logs
    command: python main.py --mode sqlserver --sync-mode full
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # Sincronización específica de tablas críticas SIGAF
  dgbienes-sigaf-priority:
    build: .
    container_name: dgbienes_sigaf_priority
    env_file:
      - .env.sigaf
    environment:
      - APP_ENV=sigaf
    volumes:
      - ./output/sigaf:/app/output
      - ./logs:/app/logs
    command: python main.py --mode sqlserver --sync-mode incremental --tables "[01_RELACION_BAC_SIGAF]" "[10_FACTURAS_OP_PAGOS]" "[02_SPR_RENGLONES]"
    profiles: ["priority"]
    networks:
      - dgbienes-network

  # ========================
  # SIGAF DEVENGADOS 
  # ========================
  dgbienes-devengados:
    build: .
    container_name: dgbienes_devengados
    env_file:
      - .env.sigaf_devengado
    environment:
      - APP_ENV=sigaf_devengado
    volumes:
      - ./output/devengados:/app/output
      - ./logs:/app/logs
    command: python main.py --mode both --sync-mode incremental
    networks:
      - dgbienes-network

  # Carga inicial para Devengados
  dgbienes-devengados-full:
    build: .
    container_name: dgbienes_devengados_full
    env_file:
      - .env.sigaf_devengado
    environment:
      - APP_ENV=sigaf_devengado
    volumes:
      - ./output/devengados:/app/output
      - ./logs:/app/logs
    command: python main.py --mode sqlserver --sync-mode full
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # ========================
  # SERVICIOS UTILITARIOS 
  # ========================
  
  # Servicio para solo Excel (todos los entornos)
  dgbienes-excel-only:
    build: .
    container_name: dgbienes_excel_only
    env_file:
      - .env.default
    environment:
      - APP_ENV=default
    volumes:
      - ./output/excel:/app/output
      - ./logs:/app/logs
    command: python main.py --mode excel
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # Verificar estado de sincronización
  dgbienes-status:
    build: .
    container_name: dgbienes_status
    env_file:
      - .env.default
    environment:
      - APP_ENV=default
    command: python main.py --status
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # Información de entornos
  dgbienes-info:
    build: .
    container_name: dgbienes_info
    env_file:
      - .env.default
    environment:
      - APP_ENV=default
    command: python main.py --info
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # Listar entornos disponibles
  dgbienes-list-envs:
    build: .
    container_name: dgbienes_list_envs
    command: python main.py --list-envs
    profiles: ["manual"]
    networks:
      - dgbienes-network

  # ========================
  # ORQUESTADOR MULTI-ENTORNO
  # ========================
  dgbienes-all-environments:
    build: .
    container_name: dgbienes_orchestrator
    volumes:
      - ./output:/app/output
      - ./logs:/app/logs
      - ./.env.default:/app/.env.default
      - ./.env.sigaf:/app/.env.sigaf
      - ./.env.sigaf_devengado:/app/.env.sigaf_devengado
    command: >
      sh -c "
        echo 'Iniciando sincronización multi-entorno...' &&
        APP_ENV=default python main.py --mode both --sync-mode incremental &&
        echo 'Bienes completado. Iniciando SIGAF...' &&
        APP_ENV=sigaf python main.py --mode both --sync-mode incremental &&
        echo 'SIGAF completado. Iniciando Devengados...' &&
        APP_ENV=sigaf_devengado python main.py --mode both --sync-mode incremental &&
        echo 'Todos los entornos sincronizados exitosamente'
      "
    profiles: ["all"]
    networks:
      - dgbienes-network

networks:
  dgbienes-network:
    driver: bridge

volumes:
  dgbienes-logs:
    driver: local